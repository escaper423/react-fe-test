{"version":3,"sources":["Components/Header.js","Components/Block.js","Components/Slot.js","Components/Body.js","App.js","reportWebVitals.js","index.js"],"names":["Header","_useSelector","useSelector","state","data","func","isReady","dispatch","useDispatch","react_default","a","createElement","className","onClick","type","content","toUpperCase","split","length","reverse","join","Block","props","dataType","description","_useDrag","useDrag","item","collect","monitor","isDragging","_useDrag2","Object","slicedToArray","drag","ref","concat","style","opacity","cursor","Slot","selector","slotType","_useState","useState","_useState2","isAcceptable","setIsAcceptable","_useState3","_useState4","slotContent","setSlotContent","useEffect","handleDrop","oldElement","addHandler","delHandler","_useDrop","useDrop","accept","canDrop","checkType","drop","hover","handleBorder","isOver","_useDrop2","onDrop","position","top","right","Body","blockList","setBlockList","addFromList","block","toConsumableArray","sort","b","cmp","localeCompare","removeFromList","prev","filter","map","src_Components_Block","key","src_Components_Slot","App","cjs","backend","HTML5Backend","src_Components_Header","src_Components_Body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","initState","result","store","createStore","arguments","undefined","action","assign","ReactDOM","render","StrictMode","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.2f8d5636.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport './Header.css'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nconst Header = () => {\r\n\r\n  let { data, func, isReady } = useSelector(state => state);\r\n  const dispatch = useDispatch()\r\n  const executeFunc = () => {\r\n    if (isReady) {\r\n      if (func === \"toUpperCase\") {\r\n        dispatch({type:\"result\", content:data.toUpperCase()})\r\n      }\r\n      else if (func === \"wordNum\") {\r\n        dispatch({type:\"result\", content:data.split(' ').length})\r\n      }\r\n      else if (func === \"reverse\") {\r\n        dispatch({type:\"result\", content:data.split('').reverse().join('')})\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <header className=\"header\">\r\n      <button className={isReady ? 'header-execute active' : 'header-execute'} onClick={executeFunc}>\r\n        실행하기\r\n      </button>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header;","import React from 'react'\r\nimport './Block.css'\r\nimport {useDrag} from 'react-dnd'\r\nconst Block = (props) => {\r\n    const dataType = props.type;\r\n    const description = props.description;\r\n\r\n    const [{isDragging} , drag] = useDrag(() => ({\r\n        type: \"Block\",\r\n        item: {type: dataType, description: description},\r\n        collect: monitor => ({\r\n            isDragging: !!monitor.isDragging(),\r\n        })\r\n    }))\r\n\r\n    return (\r\n        <div ref={drag}\r\n        className={`block ${dataType}`} \r\n        style={{opacity: isDragging? 0.5:1, cursor:'grab'}}>\r\n            {description}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Block","import React, { useEffect, useState } from 'react'\r\nimport './Slot.css'\r\nimport { useDrop } from 'react-dnd'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nconst Slot = (props) => {\r\n    const dispatch = useDispatch()\r\n    const selector = useSelector(state => state)\r\n    const slotType = props.type\r\n\r\n    const [isAcceptable, setIsAcceptable] = useState(0);\r\n    const [slotContent, setSlotContent] = useState(\"\")\r\n\r\n    useEffect(() => {\r\n        setSlotContent(selector[slotType]);\r\n    }, [selector])\r\n\r\n    const placeholderText = () => {\r\n        if (slotType === \"data\") {\r\n            return \"데이터 슬롯\"\r\n        }\r\n        else if (slotType === \"func\") {\r\n            return \"함수 슬롯\"\r\n        }\r\n        else {\r\n            return \"결과 슬롯\"\r\n        }\r\n    }\r\n\r\n    const handleDrop = (item) => {\r\n        const oldElement = { type: slotType, description: slotContent }\r\n        if (slotContent != \"\"){\r\n            props.addHandler(oldElement)\r\n        }\r\n        props.delHandler(item)\r\n        dispatch({ type: slotType, content: item.description })    \r\n    }\r\n\r\n    const checkType = (item) => {\r\n        return (item.type === slotType)\r\n    }\r\n\r\n    const handleBorder = (item) => {\r\n        if (item.type == slotType) {\r\n            setIsAcceptable(1);\r\n        }\r\n        else if (item.type != slotType){\r\n            setIsAcceptable(2);\r\n        }\r\n        \r\n    }\r\n    const removeData = () => {\r\n        const oldElement = { type: slotType, description: slotContent }\r\n        dispatch({ type: slotType, content: \"\" })\r\n        props.addHandler(oldElement)\r\n    }\r\n\r\n    const [{ isOver }, drop] = useDrop(() => ({\r\n        accept: \"Block\",\r\n        canDrop: (item) => checkType(item),\r\n        drop: (item) => handleDrop(item),\r\n        hover: (item) => handleBorder(item),\r\n        collect: (monitor) => ({\r\n            isOver: !!monitor.isOver(),\r\n        }),\r\n    }))\r\n    return (\r\n        <div onDrop={handleDrop} className={`slot\r\n        ${(slotContent != \"\") ? ' filled' : ' '} \r\n        ${isOver && isAcceptable === 1 && ' acceptable'} \r\n        ${isOver && isAcceptable === 2 && ' declined'}`} \r\n        ref={drop}\r\n        >\r\n            {\r\n                (slotContent != \"\" && slotType != \"result\") ? <span onClick={removeData} style={{ position: 'absolute', top: '10px', right: '10px', cursor: 'pointer' }}><b>&#10005;</b></span> : null\r\n            }\r\n            {\r\n                (slotContent == \"\") ?\r\n                    placeholderText()\r\n                    :\r\n                    slotContent\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Slot","import React, { useState } from 'react'\r\nimport './Body.css'\r\nimport Block from './Block'\r\nimport Slot from './Slot'\r\nconst Body = () => {\r\n    const [blockList, setBlockList] = useState(\r\n        [\r\n            { type: \"data\", description: \"모두를 위한 AI\" },\r\n            { type: \"data\", description: \"Smarter alone, Smartest together\" },\r\n            { type: \"data\", description: \"Make AI work for the rest of us\" },\r\n            { type: \"func\", description: \"toUpperCase\" },\r\n            { type: \"func\", description: \"wordNum\" },\r\n            { type: \"func\", description: \"reverse\" },\r\n        ]\r\n    )\r\n\r\n    const addFromList = (item) => {\r\n        setBlockList(block => [...block, item].sort((a, b) => { \r\n            let cmp = ('' + a.type).localeCompare(b.type) \r\n            if (cmp != 0){\r\n                return cmp\r\n            }\r\n            return cmp = (''+a.description).localeCompare(b.description)\r\n        }));\r\n\r\n    }\r\n    const removeFromList = (item) => {\r\n        setBlockList(prev => prev.filter((block) => block.description != item.description))\r\n    }\r\n\r\n    return (\r\n        <div className=\"body-content\">\r\n\r\n            <div className=\"block-container\">\r\n                {\r\n                    blockList.map(item => {\r\n                        return <Block key={item.description} type={item.type} description={item.description} />\r\n                    })\r\n                }\r\n            </div>\r\n            \r\n            <div className=\"slot-container\">\r\n                <Slot type=\"data\" addHandler={addFromList} delHandler={removeFromList} />\r\n                ----------\r\n                <Slot type=\"func\" addHandler={addFromList} delHandler={removeFromList} />\r\n                ----------\r\n                <Slot type=\"result\" addHandler={addFromList} delHandler={removeFromList} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Body","import './App.css';\nimport Header from './Components/Header'\nimport React from 'react';\nimport Body from './Components/Body';\nimport { HTML5Backend } from \"react-dnd-html5-backend\"\nimport { DndProvider } from 'react-dnd';\n\n\nfunction App() {\n  return (\n    <DndProvider backend={HTML5Backend}>\n      <div className=\"App\">\n        <Header />\n        <Body />\n      </div>\n    </DndProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\n\nlet initState = {\n  isReady: false,\n  data: \"\",\n  func: \"\",\n  result: \"\",\n};\n\nfunction reducer(state = initState, action) {\n  let newState;\n  switch (action.type) {\n    case 'data':\n      state.data = action.content;\n      state.result = \"\"\n      break;\n    case 'func':\n      state.func = action.content;\n      state.result = \"\"\n      break;\n    case 'result':\n      state.result = action.content;\n      break;\n  }\n\n  if (state.data != \"\" && state.func != \"\") {\n    state.isReady = true\n  }\n  else {\n    state.isReady = false\n    state.result = \"\"\n  }\n  newState = Object.assign({}, state, state)\n  return newState\n}\n\nlet store = createStore(reducer)\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}